{"version":3,"sources":["@store/forecast/selectors.ts","@components/UI/GridProgress/GridProgress.tsx","@components/CurrentWeather/CurrentWeatherData/CurrentWeatherTemperature/CurrentWeatherTemperature.tsx","@components/CurrentWeather/CurrentWeatherData/CurrentWeatherData.tsx","@components/CurrentWeather/Location/Location.tsx","@components/CurrentWeather/CurrentWeather.tsx","@components/Forecast/ForecastDay/ForecastDay.tsx","@components/Forecast/Forecast.tsx","@api/api.ts","@api/forecast-api.ts","@utils/waitforme.ts","@store/forecast/slice.ts","@store/search/selectors.ts","@api/search-api.ts","@store/search/slice.ts","@store/сoordinates/slice.ts","@components/Search/SearchOutput/SearchOutput.styles.ts","@components/Search/SearchOutput/SearchOutput.tsx","@components/Search/Search.tsx","@hooks/useDebounce.tsx","@store/сoordinates/selectors.ts","@views/MainView/MainView.tsx","@components/AppBar/AppBar.styles.ts","@store/ui/selectors.ts","@store/ui/slice.ts","@components/AppBar/ThemeMenu/ThemeMenu.styles.tsx","@components/AppBar/ThemeMenu/ThemeMenu.tsx","@hooks/useNonInitialEffect.tsx","@components/AppBar/AppBar.tsx","@components/Footer/Footer.tsx","#/Layouts.tsx","#/App.tsx","@store/index.ts","configureStore.ts","@components/UI/LoadingPage/LoadingPage.tsx","@components/UI/SnackBar/SnackBarProvider.tsx","@themes/theme.tsx","reportWebVitals.ts","index.tsx"],"names":["forecastSelector","state","forecast","forecastdaySelector","forecastday","GridProgress","loading","children","gridProps","Grid","Box","display","alignItems","justifyContent","height","width","CircularProgress","useStyles","makeStyles","theme","createStyles","condition","position","opacity","conditionText","fontSize","fontWeight","temperatureWrap","temperature","lineHeight","breakpoints","down","CurrentWeatherTemperature","temp","classes","className","src","icon","alt","pt","Typography","component","variant","color","align","text","title","paddingLeft","paddingRight","CurrentWeatherData","currentWeather","temp_c","last_updated","humidity","wind_kph","wind_dir","gust_kph","updateDate","Date","last_updated_weekday","toLocaleString","weekday","last_updated_date","year","month","day","container","spacing","item","xs","md","my","faCalendarAlt","faTemperatureHigh","faWater","faWind","faBacon","Location","location","name","region","country","CurrentWeather","useSelector","isFetching","p","root","minWidth","marginBottom","pos","ForecastDay","weekDay","date","sunrise","sunset","condition_text","min_temp","max_temp","Card","CardContent","gutterBottom","style","flexWrap","faSun","faMoon","Forecast","currentWeekday","currentDate","mb","noWrap","map","d","adaptedDate","astro","mintemp_c","maxtemp_c","nanoid","API_KEY","process","REACT_APP_API_KEY","instance","axios","create","baseURL","params","key","forecastAPI","days","lat","lon","get","waitForMe","milisec","Promise","resolve","setTimeout","getForecastTC","createAsyncThunk","param","thunkAPI","a","getState","Number","сoordinates","res","data","rejectWithValue","response","forecastReducer","createSlice","initialState","isSuccess","isError","errorMessage","reducers","extraReducers","builder","addCase","pending","fulfilled","action","payload","current","rejected","Error","message","reducer","searchDataSelector","search","searchAPI","place","searchTC","slice","clearData","searchReducer","clearDataAC","actions","setUserCoordinatesTC","_","navigator","geolocation","getCurrentPosition","dispatch","setCoordinatesAC","coords","latitude","longitude","сoordinatesReducer","maxHeight","overflowY","background","boxShadow","zIndex","padding","SearchOutput","searchData","onClick","List","ListItem","button","id","outputWrap","Search","useDispatch","useState","searchVal","setSearchVal","debouncedSearchTerm","value","delay","debouncedValue","setDebouncedValue","useEffect","handler","clearTimeout","useDebounce","onPlaceClick","useCallback","length","FormControl","fullWidth","InputLabel","htmlFor","OutlinedInput","onChange","event","currentTarget","trim","startAdornment","InputAdornment","labelWidth","сoordinatesSelector","MainView","Container","maxWidth","Paper","elevation","grow","flexGrow","up","themeSelector","ui","setThemeAC","uiReducer","StyledMenu","withStyles","paper","border","props","Menu","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","StyledMenuItem","backgroundColor","palette","primary","main","common","white","MenuItem","options","ThemeMenu","enqueueSnackbar","useSnackbar","currentTheme","anchorEl","setAnchorEl","indexOf","selectedIndex","setSelectedIndex","effect","deps","initialRender","useRef","effectReturns","useNonInitialEffect","IconButton","e","keepMounted","open","Boolean","onClose","option","index","selected","handleMenuItemClick","marginRight","SimpleAppBar","AppBar","Toolbar","copyright","textAlign","Footer","href","GuestLayout","mt","AppContainer","rootReducer","combineReducers","logger","createLogger","collapsed","persistConfig","storage","whitelist","persistedReducer","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","devTools","persistor","persistStore","backdrop","drawer","LoadingPage","Backdrop","SnackBarProvider","maxSnack","FRONT_COLORS","info","contrastText","success","warning","error","themeMap","light","type","default","dark","secondary","deepPurpleAmber","pinkBlueGrey","AppThemeProvider","createTheme","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootEl","document","getElementById","render","StrictMode","onBeforeLift"],"mappings":"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","file":"static/js/main.e75c8129.chunk.js","sourcesContent":["import { RootState } from '..';\n\nexport const forecastSelector = (state: RootState) => {\n  return state.forecast;\n};\n\nexport const forecastdaySelector = (state: RootState) => {\n  return state.forecast.forecast.forecastday;\n};\n","import { Box, CircularProgress, Grid, GridProps } from '@material-ui/core';\nimport React from 'react';\n\ntype GridProgressProps = {\n  loading: boolean;\n} & GridProps;\n\nconst GridProgress: React.FC<GridProgressProps> = ({\n  loading,\n  children,\n  ...gridProps\n}) => {\n  return (\n    <Grid {...gridProps}>\n      {loading ? (\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          height={200}\n          width=\"100%\"\n        >\n          <CircularProgress />\n        </Box>\n      ) : (\n        <>{children}</>\n      )}\n    </Grid>\n  );\n};\n\nexport default GridProgress;\n","import React from 'react';\nimport {\n  Box,\n  createStyles,\n  makeStyles,\n  Theme,\n  Typography,\n} from '@material-ui/core';\nimport { ConditionType } from '../../../../@types';\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return {\n    ...createStyles({\n      condition: {\n        position: 'absolute',\n        // filter: `brightness(0)`,\n        width: '150px',\n        opacity: 0.15,\n      },\n      conditionText: {\n        fontSize: 30,\n        fontWeight: 300,\n      },\n      temperatureWrap: {\n        position: 'relative',\n      },\n      temperature: {\n        lineHeight: 1,\n        fontSize: 140,\n        fontWeight: 700,\n        [theme.breakpoints.down('xs')]: {\n          fontSize: 75,\n        },\n      },\n    }),\n  };\n});\n\nconst CurrentWeatherTemperature: React.FC<Props> = ({ temp, condition }) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.temperatureWrap}>\n      <img\n        src={condition?.icon}\n        className={classes.condition}\n        width=\"150\"\n        alt=\"condition\"\n      />\n      <Box pt={5}>\n        <Typography\n          className={classes.temperature}\n          component=\"p\"\n          variant=\"subtitle1\"\n          color=\"textSecondary\"\n          align=\"center\"\n        >\n          {temp}&#176;C\n        </Typography>\n        <Typography\n          className={classes.conditionText}\n          component=\"p\"\n          variant=\"subtitle1\"\n          color=\"textSecondary\"\n          align=\"center\"\n        >\n          {condition?.text}\n        </Typography>\n      </Box>\n    </Box>\n  );\n};\n\ntype Props = {\n  temp: number;\n  condition: ConditionType;\n};\n\nexport default CurrentWeatherTemperature;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBacon,\n  faCalendarAlt,\n  faTemperatureHigh,\n  faWater,\n  faWind,\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  Box,\n  createStyles,\n  Grid,\n  makeStyles,\n  Typography,\n} from '@material-ui/core';\nimport { CurrentWeatherType } from '../../../@types';\nimport CurrentWeatherTemperature from './CurrentWeatherTemperature';\n\nconst useStyles = makeStyles(() => {\n  return {\n    ...createStyles({\n      title: {\n        paddingLeft: 10,\n        paddingRight: 7,\n      },\n    }),\n  };\n});\n\nexport const CurrentWeatherData: React.FC<Props> = ({\n  currentWeather: {\n    temp_c,\n    condition,\n    last_updated,\n    humidity,\n    wind_kph,\n    wind_dir,\n    gust_kph,\n  },\n}) => {\n  const classes = useStyles();\n  const updateDate = new Date(last_updated);\n  const currentWeekday = { weekday: 'long' } as const;\n  const currentDate = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  } as const;\n  const last_updated_weekday = updateDate.toLocaleString(\n    'en-US',\n    currentWeekday,\n  );\n  const last_updated_date = updateDate.toLocaleString('en-US', currentDate);\n\n  return (\n    <div>\n      <Grid container spacing={1}>\n        <Grid item xs={12} md={6}>\n          <CurrentWeatherTemperature temp={temp_c} condition={condition} />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <div>\n            {/* 1 */}\n            <Box my={2}>\n              <Typography color=\"textSecondary\" display=\"inline\">\n                <FontAwesomeIcon icon={faCalendarAlt} />\n              </Typography>\n              <Typography\n                className={classes.title}\n                color=\"textSecondary\"\n                display=\"inline\"\n              >\n                Today:\n              </Typography>\n              <Typography variant=\"subtitle1\" align=\"center\" display=\"inline\">\n                {last_updated_weekday} {last_updated_date}\n              </Typography>\n            </Box>\n            {/* 2 */}\n            <Box my={2}>\n              <Typography color=\"textSecondary\" display=\"inline\">\n                <FontAwesomeIcon icon={faTemperatureHigh} />\n              </Typography>\n              <Typography\n                className={classes.title}\n                color=\"textSecondary\"\n                display=\"inline\"\n              >\n                Feels Like:\n              </Typography>\n              <Typography variant=\"subtitle1\" align=\"center\" display=\"inline\">\n                {temp_c}&#176;C\n              </Typography>\n            </Box>\n            {/* 3 */}\n            <Box my={2}>\n              <Typography color=\"textSecondary\" display=\"inline\">\n                <FontAwesomeIcon icon={faWater} />\n              </Typography>\n              <Typography\n                className={classes.title}\n                color=\"textSecondary\"\n                display=\"inline\"\n              >\n                Humidity:\n              </Typography>\n              <Typography variant=\"subtitle1\" align=\"center\" display=\"inline\">\n                {humidity} %\n              </Typography>\n            </Box>\n            {/* 4 */}\n            <Box my={2}>\n              <Typography color=\"textSecondary\" display=\"inline\">\n                <FontAwesomeIcon icon={faWind} />\n              </Typography>\n              <Typography\n                className={classes.title}\n                color=\"textSecondary\"\n                display=\"inline\"\n              >\n                Wind:\n              </Typography>\n              <Typography variant=\"subtitle1\" align=\"center\" display=\"inline\">\n                {wind_kph} km/h ({wind_dir})\n              </Typography>\n            </Box>\n            {/* 5 */}\n            <Box my={2}>\n              <Typography color=\"textSecondary\" display=\"inline\">\n                <FontAwesomeIcon icon={faBacon} />\n              </Typography>\n              <Typography\n                className={classes.title}\n                color=\"textSecondary\"\n                display=\"inline\"\n              >\n                Gust:\n              </Typography>\n              <Typography variant=\"subtitle1\" align=\"center\" display=\"inline\">\n                {gust_kph}\n              </Typography>\n            </Box>\n          </div>\n        </Grid>\n      </Grid>\n      <div />\n    </div>\n  );\n};\n\ntype Props = {\n  currentWeather: CurrentWeatherType;\n};\n","import { createStyles, makeStyles, Typography } from '@material-ui/core';\nimport React from 'react';\n\ntype Props = {\n  location: {\n    name: string;\n    region: string;\n    country: string;\n  };\n};\n\nconst useStyles = makeStyles(() => {\n  return {\n    ...createStyles({\n      title: {\n        fontSize: 30,\n        fontWeight: 300,\n      },\n    }),\n  };\n});\n\nexport const Location: React.FC<Props> = ({ location }) => {\n  const classes = useStyles();\n  return (\n    <div>\n      <Typography className={classes.title} component=\"h2\" variant=\"h6\">\n        {location.name}, {location.region}, {location.country}\n      </Typography>\n    </div>\n  );\n};\nexport default Location;\n","import { Box, Grid } from '@material-ui/core';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { forecastSelector } from '../../@store/forecast/selectors';\nimport GridProgress from '../UI/GridProgress/GridProgress';\nimport { CurrentWeatherData } from './CurrentWeatherData/CurrentWeatherData';\nimport { Location } from './Location/Location';\n\nexport const CurrentWeather: React.FC = () => {\n  const { location, currentWeather, isFetching } =\n    useSelector(forecastSelector);\n\n  return (\n    <Box p={3}>\n      <GridProgress container spacing={1} loading={isFetching}>\n        <Grid item xs={12}>\n          <Location location={location} />\n          <CurrentWeatherData currentWeather={currentWeather} />\n        </Grid>\n      </GridProgress>\n    </Box>\n  );\n};\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMoon, faSun } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Card,\n  CardContent,\n  Typography,\n  makeStyles,\n  createStyles,\n  Theme,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return {\n    ...createStyles({\n      root: {\n        minWidth: 275,\n        [theme.breakpoints.down('sm')]: {\n          marginBottom: 16,\n        },\n      },\n      title: {\n        fontSize: 14,\n      },\n      pos: {\n        marginBottom: 6,\n      },\n      temperature: {\n        fontWeight: 300,\n        fontSize: '24px',\n      },\n    }),\n  };\n});\n\nconst ForecastDay: React.FC<Props> = ({\n  weekDay,\n  date,\n  sunrise,\n  sunset,\n  icon,\n  condition_text,\n  min_temp,\n  max_temp,\n}) => {\n  const classes = useStyles();\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography\n          className={classes.title}\n          color=\"textSecondary\"\n          gutterBottom\n          align=\"center\"\n        >\n          {weekDay}\n        </Typography>\n        <Typography\n          className={classes.pos}\n          color=\"textSecondary\"\n          align=\"center\"\n        >\n          {date}\n        </Typography>\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            flexWrap: 'wrap',\n            justifyContent: 'center',\n          }}\n        >\n          <img src={icon} alt=\"icon\" />\n        </div>\n        <Typography\n          className={classes.pos}\n          color=\"textSecondary\"\n          align=\"center\"\n          style={{\n            marginBottom: 24,\n          }}\n        >\n          {condition_text}\n        </Typography>\n        <Typography\n          className={classes.temperature}\n          color=\"textSecondary\"\n          align=\"center\"\n          style={{\n            marginBottom: 24,\n          }}\n        >\n          {min_temp} - {max_temp}&#176;C\n        </Typography>\n        <Typography\n          className={classes.pos}\n          color=\"textSecondary\"\n          align=\"center\"\n        >\n          <FontAwesomeIcon icon={faSun} /> {sunrise}\n        </Typography>\n        <Typography\n          className={classes.pos}\n          color=\"textSecondary\"\n          align=\"center\"\n        >\n          <FontAwesomeIcon icon={faMoon} /> {sunset}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default ForecastDay;\n\ntype Props = {\n  weekDay: string;\n  date: string;\n  sunrise: string;\n  sunset: string;\n  icon: string;\n  condition_text: string;\n  min_temp: number;\n  max_temp: number;\n};\n","import { Box, Grid, Typography } from '@material-ui/core';\nimport { nanoid } from '@reduxjs/toolkit';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  forecastdaySelector,\n  forecastSelector,\n} from '../../@store/forecast/selectors';\nimport GridProgress from '../UI/GridProgress/GridProgress';\nimport ForecastDay from './ForecastDay/ForecastDay';\n\nconst Forecast: React.FC = () => {\n  const forecastday = useSelector(forecastdaySelector);\n  const { isFetching } = useSelector(forecastSelector);\n\n  const currentWeekday = { weekday: 'long' } as const;\n  const currentDate = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  } as const;\n\n  return (\n    <Box p={3}>\n      <Box mb={1}>\n        <Typography variant=\"h6\" noWrap>\n          Forecast\n        </Typography>\n      </Box>\n      <Box>\n        <GridProgress container spacing={1} loading={isFetching}>\n          {forecastday.map((d) => {\n            const adaptedDate = new Date(d.date);\n            return (\n              <Grid item xs={12} md={4} key={nanoid(8)}>\n                <ForecastDay\n                  weekDay={adaptedDate.toLocaleString('en-US', currentWeekday)}\n                  date={adaptedDate.toLocaleString('en-US', currentDate)}\n                  sunrise={d.astro.sunrise}\n                  sunset={d.astro.sunset}\n                  icon={d.day.condition.icon}\n                  condition_text={d.day.condition.text}\n                  min_temp={d.day.mintemp_c}\n                  max_temp={d.day.maxtemp_c}\n                />\n              </Grid>\n            );\n          })}\n        </GridProgress>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Forecast;\n","import axios from 'axios';\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\nexport const API_URL = 'https://api.weatherapi.com/v1';\n\nexport const instance = axios.create({\n  baseURL: API_URL,\n  params: {\n    key: API_KEY,\n  },\n});\n","import { ForecastResponseType } from '../@types';\nimport { instance } from './api';\n\nexport const forecastAPI = {\n  dailyWeather(days: number, lat: number, lon: number) {\n    return instance.get<ForecastResponseType>(\n      `/forecast.json?q=${lat},${lon}&days=${days}`,\n    );\n  },\n};\n","// usefull for delay in thunk creators\nexport function waitForMe(milisec: number) {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve('');\n    }, milisec);\n  });\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { forecastAPI } from '../../@api/forecast-api';\nimport {\n  LocationType,\n  CurrentWeatherType,\n  ForecastType,\n  ForecastResponseType,\n} from '../../@types';\nimport { waitForMe } from '../../@utils/waitforme';\nimport { сoordinatesInitialStateType } from '../сoordinates/slice';\n\nconst forecastInitialState = {\n  location: {} as LocationType,\n  currentWeather: {} as CurrentWeatherType,\n  forecast: {\n    forecastday: [],\n  } as ForecastType,\n  // utils\n  isFetching: false,\n  isSuccess: false,\n  isError: false,\n  errorMessage: '',\n};\n\nexport type forecastInitialStateType = typeof forecastInitialState;\n\n// https://stackoverflow.com/questions/67279037/the-thunkapi-getstate-method-does-not-correctly-infer-the-state-type\nexport const getForecastTC = createAsyncThunk<\n  ForecastResponseType,\n  { days: number },\n  { state: { сoordinates: сoordinatesInitialStateType } }\n>('forecast/getForecast', async (param, thunkAPI) => {\n  const state = thunkAPI.getState();\n  try {\n    await waitForMe(300);\n    const res = await forecastAPI.dailyWeather(\n      param.days,\n      Number(state.сoordinates.lat || 0),\n      Number(state.сoordinates.lon || 0),\n    );\n    return res.data;\n  } catch (err: any) {\n    return thunkAPI.rejectWithValue(err.response.data);\n  }\n});\n\nexport const slice = createSlice({\n  name: 'forecast',\n  initialState: forecastInitialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getForecastTC.pending, (state) => {\n      state.isFetching = true;\n    });\n    builder.addCase(getForecastTC.fulfilled, (state, action) => {\n      if (action.payload) {\n        state.location = action.payload.location;\n        state.currentWeather = action.payload.current;\n        state.forecast = action.payload.forecast;\n      }\n      state.isFetching = false;\n      state.isSuccess = true;\n    });\n    builder.addCase(getForecastTC.rejected, (state, action) => {\n      state.isFetching = false;\n      state.isError = true;\n      if (action.payload instanceof Error) {\n        state.errorMessage = action.payload.message;\n      }\n    });\n  },\n});\n\nexport const forecastReducer = slice.reducer;\n","import { RootState } from '..';\n\nexport const searchDataSelector = (state: RootState) => {\n  return state.search.data;\n};\n","import { SearchPlaceResponseType } from '../@types';\nimport { instance } from './api';\n\nexport const searchAPI = {\n  place(place: string) {\n    return instance.get<SearchPlaceResponseType[]>(`/search.json?q=${place}`);\n  },\n};\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { searchAPI } from '../../@api/search-api';\nimport { SearchPlaceResponseType } from '../../@types';\n\nconst searchInitialState = {\n  data: [] as SearchPlaceResponseType[],\n};\n\nexport const searchTC = createAsyncThunk<\n  SearchPlaceResponseType[],\n  string,\n  any\n>('search/searchTC', async (place, thunkAPI) => {\n  try {\n    const res = await searchAPI.place(place);\n    return res.data;\n  } catch (err: any) {\n    return thunkAPI.rejectWithValue(err.response.data);\n  }\n});\n\nexport const slice = createSlice({\n  name: 'search',\n  initialState: searchInitialState,\n  reducers: {\n    clearData(state) {\n      state.data = [];\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(searchTC.fulfilled, (state, action) => {\n      if (action.payload) {\n        state.data = action.payload;\n      }\n    });\n  },\n});\n\nexport const searchReducer = slice.reducer;\nexport const { clearData: clearDataAC } = slice.actions;\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nconst сoordinatesInitialState = {\n  lat: null as number | null, // lat: 51.5341714,\n  lon: null as number | null, // lon: 33.3767724,\n};\n\nexport type сoordinatesInitialStateType = typeof сoordinatesInitialState;\n\nexport const setUserCoordinatesTC = createAsyncThunk(\n  'сoordinates/setUserCoordinatesTC',\n  (_, thunkAPI) => {\n    navigator.geolocation.getCurrentPosition((position) => {\n      thunkAPI.dispatch(\n        setCoordinatesAC({\n          lat: position.coords.latitude,\n          lon: position.coords.longitude,\n        }),\n      );\n    });\n  },\n);\n\nexport const slice = createSlice({\n  name: 'сoordinates',\n  initialState: сoordinatesInitialState,\n  reducers: {\n    setCoordinatesAC(\n      state,\n      action: PayloadAction<{ lat: number; lon: number }>,\n    ) {\n      state.lat = action.payload.lat;\n      state.lon = action.payload.lon;\n    },\n  },\n});\n\nexport const сoordinatesReducer = slice.reducer;\nexport const { setCoordinatesAC } = slice.actions;\n","import { makeStyles, Theme, createStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles((theme: Theme) => {\n  return {\n    ...createStyles({\n      root: {\n        position: 'absolute',\n        maxHeight: 430,\n        width: '100%',\n        overflowY: 'auto',\n        background: 'white',\n        boxShadow: '0px 10px 20px rgba(0, 0, 0, 0.22)',\n        zIndex: 2,\n      },\n      item: {\n        height: 60,\n        padding: theme.spacing(1),\n        paddingLeft: 20,\n\n        [theme.breakpoints.down('sm')]: {\n          height: 90,\n        },\n      },\n      title: {\n        fontWeight: 500,\n        color: '#000',\n      },\n    }),\n  };\n});\n","import React from 'react';\nimport { List, ListItem, Typography } from '@material-ui/core';\nimport { useStyles } from './SearchOutput.styles';\nimport { SearchPlaceResponseType } from '../../../@types';\n\ninterface Props {\n  searchData: SearchPlaceResponseType[];\n  onClick: any;\n}\n\nconst SearchOutput: React.FC<Props> = ({ searchData = [], onClick }) => {\n  const classes = useStyles();\n\n  return (\n    <List className={classes.root} aria-labelledby=\"nested-list-subheader\">\n      {searchData.map((item: SearchPlaceResponseType) => {\n        return (\n          <ListItem\n            key={item.id}\n            button\n            className={classes.item}\n            onClick={() => onClick(item.lat, item.lon)}\n          >\n            <Typography variant=\"body1\">\n              <span className={classes.title}>{item.name}</span>\n            </Typography>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default SearchOutput;\n","import {\n  Box,\n  FormControl,\n  InputAdornment,\n  InputLabel,\n  makeStyles,\n  OutlinedInput,\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useDebounce from '../../@hooks/useDebounce';\nimport { getForecastTC } from '../../@store/forecast/slice';\nimport { searchDataSelector } from '../../@store/search/selectors';\nimport { clearDataAC, searchTC } from '../../@store/search/slice';\nimport { setCoordinatesAC } from '../../@store/сoordinates/slice';\nimport SearchOutput from './SearchOutput';\n\nexport const useStyles = makeStyles(() => ({\n  outputWrap: {\n    position: 'relative',\n    display: 'flex',\n    flexWrap: 'nowrap',\n  },\n}));\n\nconst Search: React.FC = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const searchData = useSelector(searchDataSelector);\n  const [searchVal, setSearchVal] = useState('');\n  const debouncedSearchTerm = useDebounce(searchVal, 300);\n\n  const onPlaceClick = useCallback(\n    (lat: number, lon: number) => {\n      dispatch(setCoordinatesAC({ lat, lon }));\n      const days = 3; // Limited for free plan\n      dispatch(getForecastTC({ days }));\n      dispatch(clearDataAC());\n      setSearchVal('');\n    },\n    [dispatch],\n  );\n\n  useEffect(() => {\n    // API response only for 3 characters\n    if (debouncedSearchTerm.length > 2) dispatch(searchTC(debouncedSearchTerm));\n  }, [debouncedSearchTerm, dispatch]);\n\n  const handleChange = () => (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchVal(event.currentTarget.value.trim());\n  };\n\n  return (\n    <Box p={3}>\n      <FormControl fullWidth variant=\"outlined\">\n        <InputLabel htmlFor=\"search-input\">Search</InputLabel>\n        <OutlinedInput\n          id=\"search-input\"\n          value={searchVal}\n          onChange={handleChange()}\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <SearchIcon />\n            </InputAdornment>\n          }\n          labelWidth={60}\n        />\n      </FormControl>\n\n      {searchData.length > 0 && (\n        <div className={classes.outputWrap}>\n          <SearchOutput searchData={searchData} onClick={onPlaceClick} />\n        </div>\n      )}\n    </Box>\n  );\n};\n\nexport default Search;\n","import { useEffect, useState } from 'react';\n\nexport default function useDebounce(value: string, delay: number): string {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(\n    () => {\n      // Update debounced value after delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n      // Cancel the timeout if value changes (also on delay change or unmount)\n      // This is how we prevent debounced value from updating if value is changed ...\n      // .. within the delay period. Timeout gets cleared and restarted.\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    [value, delay], // Only re-call effect if value or delay changes\n  );\n\n  return debouncedValue;\n}\n","import { RootState } from '..';\n\nexport const сoordinatesSelector = (state: RootState) => {\n  return state.сoordinates;\n};\n","import { Box, Container, Grid, Paper } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport CurrentWeather from '../../@components/CurrentWeather';\nimport Forecast from '../../@components/Forecast';\nimport Search from '../../@components/Search';\nimport { getForecastTC } from '../../@store/forecast/slice';\nimport { сoordinatesSelector } from '../../@store/сoordinates/selectors';\nimport { setUserCoordinatesTC } from '../../@store/сoordinates/slice';\n\nconst MainView: React.FC = () => {\n  const dispatch = useDispatch();\n  const { lon, lat } = useSelector(сoordinatesSelector);\n\n  useEffect(() => {\n    if (lat === null && lon === null) {\n      dispatch(setUserCoordinatesTC());\n    }\n  }, [lat, lon, dispatch]);\n\n  useEffect(() => {\n    const days = 3; // Limited for free plan\n    if (lat !== null && lon !== null) {\n      dispatch(getForecastTC({ days }));\n    }\n  }, [lat, lon, dispatch]);\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Grid container spacing={3} style={{ padding: 3 }}>\n        <Grid item xs={12}>\n          <Box mb={1}>\n            <Paper elevation={3}>\n              <Search />\n            </Paper>\n          </Box>\n        </Grid>\n        <Grid item xs={12}>\n          <Box mb={1}>\n            <Paper elevation={3}>\n              <CurrentWeather />\n            </Paper>\n          </Box>\n        </Grid>\n        <Grid item xs={12}>\n          <Box mb={1}>\n            <Paper elevation={3}>\n              <Forecast />\n            </Paper>\n          </Box>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default MainView;\n","import { makeStyles, Theme, createStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles((theme: Theme) => {\n  return {\n    ...createStyles({\n      grow: {\n        flexGrow: 1,\n      },\n      title: {\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n          display: 'block',\n        },\n      },\n    }),\n  };\n});\n","import { RootState } from '../index';\n\nexport const themeSelector = (state: RootState) => {\n  return state.ui.theme;\n};\n","import { createSlice } from '@reduxjs/toolkit';\nimport { ThemeColorsType } from '../../@types';\n\nconst uiInitialState = {\n  theme: 'light' as ThemeColorsType,\n};\n\nexport type UIInitialStateType = typeof uiInitialState;\n\nexport const slice = createSlice({\n  name: 'ui',\n  initialState: uiInitialState,\n  reducers: {\n    setThemeAC(state, action) {\n      state.theme = action.payload;\n    },\n  },\n});\n\nexport const uiReducer = slice.reducer;\nexport const { setThemeAC } = slice.actions;\n","import React from 'react';\nimport { withStyles, MenuProps, Menu, MenuItem } from '@material-ui/core';\n\nexport const StyledMenu = withStyles({\n  paper: {\n    border: '1px solid #d3d4d5',\n  },\n})((props: MenuProps) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'center',\n    }}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'center',\n    }}\n    PaperProps={{\n      style: {\n        width: 240,\n      },\n    }}\n    {...props}\n  />\n));\n\nexport const StyledMenuItem = withStyles((theme) => ({\n  root: {\n    '&:focus': {\n      backgroundColor: theme.palette.primary.main,\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n        color: theme.palette.common.white,\n      },\n    },\n  },\n}))(MenuItem);\n","// https://stackoverflow.com/a/55533600/3988363\nimport { IconButton } from '@material-ui/core';\nimport FormatColorFillIcon from '@material-ui/icons/FormatColorFill';\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport { useSnackbar } from 'notistack';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNonInitialEffect } from '../../../@hooks/useNonInitialEffect';\nimport { themeSelector } from '../../../@store/ui/selectors';\nimport { setThemeAC } from '../../../@store/ui/slice';\nimport { ThemeColorsType } from '../../../@types';\nimport { StyledMenu, StyledMenuItem } from './ThemeMenu.styles';\n\nconst options = [\n  'light',\n  'dark',\n  'deepPurpleAmber',\n  'pinkBlueGrey',\n] as ThemeColorsType[];\n\nexport default function ThemeMenu() {\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const currentTheme = useSelector(themeSelector);\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const [selectedIndex, setSelectedIndex] = useState(\n    options.indexOf(currentTheme),\n  );\n\n  const handleClickListItem = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = (\n    event: React.MouseEvent<HTMLElement>,\n    index: number,\n  ) => {\n    setSelectedIndex(index);\n    dispatch(setThemeAC(options[index]));\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  useNonInitialEffect(() => {\n    enqueueSnackbar(`Theme changed to ${currentTheme}`, {\n      variant: 'warning',\n    });\n  }, [enqueueSnackbar, currentTheme]);\n\n  return (\n    <div>\n      <IconButton\n        aria-label=\"more\"\n        aria-controls=\"long-menu\"\n        aria-haspopup=\"true\"\n        onClick={(e) => handleClickListItem(e)}\n      >\n        <FormatColorFillIcon />\n      </IconButton>\n      <StyledMenu\n        id=\"lock-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {options.map((option, index) => (\n          <StyledMenuItem\n            key={option}\n            // disabled={index === 0}\n            selected={index === selectedIndex}\n            onClick={(event) => handleMenuItemClick(event, index)}\n          >\n            {index === selectedIndex ? (\n              <RadioButtonCheckedIcon\n                fontSize=\"small\"\n                style={{ marginRight: '8px' }}\n              />\n            ) : (\n              <RadioButtonUncheckedIcon\n                fontSize=\"small\"\n                style={{ marginRight: '8px' }}\n              />\n            )}\n            {option}\n          </StyledMenuItem>\n        ))}\n      </StyledMenu>\n    </div>\n  );\n}\n","// https://github.com/thivi/use-non-initial-effect-hook\nimport { useEffect, EffectCallback, DependencyList, useRef } from 'react';\n\n/**\n * This hook gets called only when the dependencies change but not during initial render.\n *\n * @param {EffectCallback} effect The `useEffect` callback function.\n * @param {DependencyList} deps An array of dependencies.\n *\n * @example\n * ```\n *  useNonInitialEffect(()=>{\n *      alert(\"Dependency changed!\");\n * },[dependency]);\n * ```\n */\nexport const useNonInitialEffect = (\n  effect: EffectCallback,\n  deps?: DependencyList,\n) => {\n  const initialRender = useRef(true);\n\n  useEffect(() => {\n    let effectReturns: any = () => {\n      // do nothing.\n    };\n\n    if (initialRender.current) {\n      initialRender.current = false;\n    } else {\n      effectReturns = effect();\n    }\n\n    if (effectReturns && typeof effectReturns === 'function') {\n      return effectReturns;\n    }\n    return undefined;\n  }, deps);\n};\n","import { Container } from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport { useStyles } from './AppBar.styles';\nimport ThemeMenu from './ThemeMenu/ThemeMenu';\n\nexport const SimpleAppBar: React.FC = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Container maxWidth=\"lg\">\n          <Toolbar style={{ padding: 0 }}>\n            <Typography className={classes.title} variant=\"h6\" noWrap>\n              Weather App\n            </Typography>\n            <div className={classes.grow} />\n            <ThemeMenu />\n          </Toolbar>\n        </Container>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default SimpleAppBar;\n","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  AppBar,\n  Container,\n  Toolbar,\n  Typography,\n  IconButton,\n  Box,\n} from '@material-ui/core';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nconst useStyles = makeStyles(() => {\n  return {\n    ...createStyles({\n      grow: {\n        flexGrow: 1,\n      },\n      copyright: {\n        textAlign: 'center',\n        marginBottom: 0,\n        fontSize: 16,\n      },\n    }),\n  };\n});\n\nconst Footer: React.FC = () => {\n  const classes = useStyles();\n  return (\n    <AppBar position=\"static\">\n      <Container maxWidth=\"lg\">\n        <Toolbar\n          style={{\n            padding: 0,\n            display: 'flex',\n            justifyContent: 'space-between',\n          }}\n        >\n          <Box>\n            <Typography className={classes.copyright} variant=\"h6\" noWrap>\n              © created by Aleksandr Siryi\n            </Typography>\n          </Box>\n          <Box>\n            <IconButton\n              color=\"inherit\"\n              href=\"https://github.com/theobroma/weather-app\"\n              data-testid=\"github-link\"\n              aria-label=\"Github Link\"\n            >\n              <GitHubIcon />\n            </IconButton>\n          </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\n\nexport default Footer;\n","import { Box } from '@material-ui/core';\nimport React from 'react';\nimport SimpleAppBar from '../@components/AppBar';\nimport Footer from '../@components/Footer';\n\ninterface ILayout {\n  // All other props\n  [x: string]: any;\n}\n\nexport const GuestLayout: React.FC<ILayout> = ({ children }) => {\n  return (\n    <div className=\"HolyGrail\">\n      <SimpleAppBar />\n      <main className=\"HolyGrail-content\">\n        <Box mt={2} mb={2}>\n          {children}\n        </Box>\n      </main>\n      <Footer />\n    </div>\n  );\n};\n","// usually many routes here\nimport React from 'react';\nimport MainView from '../@views/MainView';\nimport { GuestLayout } from './Layouts';\n\nexport const AppContainer: React.FC = () => {\n  return (\n    <GuestLayout>\n      <MainView />\n    </GuestLayout>\n  );\n};\n","import { combineReducers } from 'redux';\nimport { forecastReducer } from './forecast/slice';\nimport { searchReducer } from './search/slice';\nimport { uiReducer } from './ui/slice';\nimport { сoordinatesReducer } from './сoordinates/slice';\n\nexport const rootReducer = combineReducers({\n  сoordinates: сoordinatesReducer,\n  forecast: forecastReducer,\n  search: searchReducer,\n  ui: uiReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { createLogger } from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { rootReducer } from './@store/index';\n\nconst logger = createLogger({\n  collapsed: true,\n});\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  // blacklist: ['filter'], // will not be persisted\n  whitelist: ['ui'], // will be persisted\n};\n\n// Middleware: Redux Persist Persisted Reducer\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(logger),\n  // devTools: process.env.NODE_ENV === 'development',\n  devTools: true,\n});\n\nexport const persistor = persistStore(store);\nexport default { store, persistor };\n","import React from 'react';\nimport { CircularProgress, Backdrop, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\nexport const LoadingPage: React.FC = () => {\n  const classes = useStyles();\n  return (\n    <Backdrop className={classes.backdrop} open>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  );\n};\nexport default LoadingPage;\n","import React from 'react';\nimport { SnackbarProvider as NotiStackSnackbarProvider } from 'notistack';\n\nexport const SNACKBAR_MAX_COUNT = 5;\n\nconst SnackBarProvider: React.FC = ({ children }) => {\n  return (\n    <NotiStackSnackbarProvider\n      maxSnack={SNACKBAR_MAX_COUNT}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'right',\n      }}\n    >\n      {children}\n    </NotiStackSnackbarProvider>\n  );\n};\n\nexport default SnackBarProvider;\n","import React from 'react';\nimport { CssBaseline, PaletteType } from '@material-ui/core';\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { useSelector } from 'react-redux';\nimport { themeSelector } from '../@store/ui/selectors';\n\n/**\n * Material UI theme \"front\" colors, \"back\" colors are different for Light and Dark modes\n */\nconst FRONT_COLORS = {\n  info: {\n    main: '#0277bd', // Light Blue 800\n    contrastText: '#FFFFFF',\n  },\n  success: {\n    main: '#2e7d32', // Green 800\n    contrastText: '#FFFFFF',\n  },\n  warning: {\n    main: '#f9a825', // Yellow 800\n    contrastText: '#FFFFFF',\n  },\n  error: {\n    main: '#c62828', // Red 800\n    contrastText: '#FFFFFF',\n  },\n};\n\n/**\n * Material UI theme config for \"Light Mode\"\n */\nconst LIGHT_THEME = {\n  palette: {\n    type: 'light' as PaletteType,\n    background: {\n      paper: '#f5f5f5', // Gray 100 - Background of \"Paper\" based component\n      default: '#FFFFFF',\n    },\n    primary: {\n      light: '#757ce8',\n      main: '#3f50b5',\n      dark: '#002884',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#ff7961',\n      main: '#f44336',\n      dark: '#ba000d',\n      contrastText: '#000',\n    },\n    ...FRONT_COLORS,\n  },\n};\n\n/**\n * Material UI theme config for \"Dark Mode\"\n */\nconst DARK_THEME = {\n  palette: {\n    type: 'dark' as PaletteType,\n    background: {\n      paper: '#424242', // Gray 800 - Background of \"Paper\" based component\n      default: '#303030',\n    },\n    primary: {\n      main: '#81c784', // Green 300\n      contrastText: '#000000',\n    },\n    secondary: {\n      main: '#ffb74d', // Orange 300\n      contrastText: '#000',\n    },\n    ...FRONT_COLORS,\n  },\n};\n\nconst DEEP_PURPLE_AMBER_THEME = {\n  palette: {\n    type: 'light' as PaletteType,\n    background: {\n      paper: '#f5f5f5', // Gray 100 - Background of \"Paper\" based component\n      default: '#FFFFFF',\n    },\n    primary: {\n      main: '#673ab7',\n      contrastText: '#fff',\n    },\n    secondary: {\n      main: '#ffd740',\n      contrastText: '#000',\n    },\n    ...FRONT_COLORS,\n  },\n};\n\nconst PINK_BLUE_GREY_THEME = {\n  palette: {\n    type: 'dark' as PaletteType,\n    background: {\n      paper: '#424242', // Gray 800 - Background of \"Paper\" based component\n      default: '#303030',\n    },\n    primary: {\n      main: '#e91e63;', // Green 300\n      contrastText: '#000000',\n    },\n    secondary: {\n      main: '#607d8b;', // Orange 300\n      contrastText: '#000',\n    },\n    ...FRONT_COLORS,\n  },\n};\n\nconst themeMap = {\n  light: LIGHT_THEME,\n  dark: DARK_THEME,\n  deepPurpleAmber: DEEP_PURPLE_AMBER_THEME,\n  pinkBlueGrey: PINK_BLUE_GREY_THEME,\n};\n\nconst AppThemeProvider: React.FC = ({ children }) => {\n  const currentTheme = useSelector(themeSelector);\n  const theme = createTheme(themeMap[currentTheme]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      {children}\n    </ThemeProvider>\n  );\n};\n\nexport default AppThemeProvider;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { AppContainer } from './#/App';\nimport { store, persistor } from './configureStore';\nimport LoadingPage from './@components/UI/LoadingPage';\nimport { SnackBarProvider } from './@components/UI/SnackBar';\nimport AppThemeProvider from './@themes/theme';\nimport reportWebVitals from './reportWebVitals';\n\n// All styles\nimport './@assets/styles/index.scss';\n\n// Open Source fonts\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\n\nconst rootEl = document.getElementById('root');\n\nrender(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate\n        loading={<LoadingPage />}\n        persistor={persistor}\n        onBeforeLift={() => new Promise((resolve) => setTimeout(resolve, 10))} // delay\n      >\n        <AppThemeProvider>\n          <SnackBarProvider>\n            <AppContainer />\n          </SnackBarProvider>\n        </AppThemeProvider>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  rootEl,\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}