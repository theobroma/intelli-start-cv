{"version":3,"sources":["@api/api.ts","@api/forecast-api.ts","@utils/waitforme.ts","@store/forecast/slice.ts","@store/сoordinates/selectors.ts","@store/сoordinates/slice.ts","@components/UI/SectionTitle/SectionTitle.tsx","@views/MainView/AboutSection/AboutSection.tsx","@views/MainView/ProjectsSection/ProjectsSection.tsx","@views/MainView/MainView.tsx","@components/AppBar/AppBar.styles.ts","@store/ui/selectors.ts","@store/ui/slice.ts","@components/AppBar/ThemeMenu/ThemeMenu.styles.tsx","@components/AppBar/ThemeMenu/ThemeMenu.tsx","@hooks/useNonInitialEffect.tsx","@components/AppBar/AppBar.tsx","@components/Footer/Footer.tsx","#/Layouts.tsx","#/App.tsx","@store/projects/slice.ts","@api/search-api.ts","@store/search/slice.ts","@store/index.ts","configureStore.ts","@components/UI/LoadingPage/LoadingPage.tsx","@components/UI/SnackBar/SnackBarProvider.tsx","@themes/theme.tsx","reportWebVitals.ts","index.tsx"],"names":["API_KEY","process","REACT_APP_API_KEY","instance","axios","create","baseURL","params","key","forecastAPI","days","lat","lon","get","waitForMe","milisec","Promise","resolve","setTimeout","getForecastTC","createAsyncThunk","param","thunkAPI","a","state","getState","Number","сoordinates","res","data","rejectWithValue","response","forecastReducer","createSlice","name","initialState","location","currentWeather","forecast","forecastday","isFetching","isSuccess","isError","errorMessage","reducers","extraReducers","builder","addCase","pending","fulfilled","action","payload","current","rejected","Error","message","reducer","сoordinatesSelector","setUserCoordinatesTC","_","navigator","geolocation","getCurrentPosition","position","dispatch","setCoordinatesAC","coords","latitude","longitude","slice","сoordinatesReducer","actions","useStyles","makeStyles","theme","title","fontSize","point","color","palette","primary","main","SectionTitle","children","classes","Typography","className","gutterBottom","variant","component","avatarBox","display","justifyContent","breakpoints","up","avatar","width","maxWidth","height","description","alpha","text","AboutSection","Container","Box","py","Grid","container","spacing","item","xs","sm","md","paragraph","src","alt","root","flexDirection","media","maxHeight","content","flexGrow","ProjectsSection","map","card","Card","CardMedia","image","CardContent","CardActions","Button","size","MainView","useDispatch","useSelector","useEffect","createStyles","grow","themeSelector","ui","setThemeAC","uiReducer","StyledMenu","withStyles","paper","border","props","Menu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","style","StyledMenuItem","backgroundColor","common","white","MenuItem","options","ThemeMenu","enqueueSnackbar","useSnackbar","currentTheme","useState","anchorEl","setAnchorEl","indexOf","selectedIndex","setSelectedIndex","effect","deps","initialRender","useRef","effectReturns","useNonInitialEffect","IconButton","onClick","e","currentTarget","id","keepMounted","open","Boolean","onClose","option","index","selected","event","handleMenuItemClick","marginRight","SimpleAppBar","AppBar","Toolbar","padding","noWrap","copyright","textAlign","marginBottom","Footer","href","GuestLayout","mt","mb","AppContainer","projectsReducer","searchAPI","place","searchTC","clearData","searchReducer","rootReducer","combineReducers","projects","search","logger","createLogger","collapsed","persistConfig","storage","whitelist","persistedReducer","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","devTools","persistor","persistStore","backdrop","zIndex","drawer","LoadingPage","Backdrop","CircularProgress","SnackBarProvider","maxSnack","FRONT_COLORS","info","contrastText","success","warning","error","themeMap","light","type","background","default","dark","secondary","deepPurpleAmber","pinkBlueGrey","AppThemeProvider","createTheme","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootEl","document","getElementById","render","StrictMode","loading","onBeforeLift"],"mappings":"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","file":"static/js/main.fdcf006f.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\nexport const API_URL = 'https://api.weatherapi.com/v1';\n\nexport const instance = axios.create({\n  baseURL: API_URL,\n  params: {\n    key: API_KEY,\n  },\n});\n","import { ForecastResponseType } from '../@types';\nimport { instance } from './api';\n\nexport const forecastAPI = {\n  dailyWeather(days: number, lat: number, lon: number) {\n    return instance.get<ForecastResponseType>(\n      `/forecast.json?q=${lat},${lon}&days=${days}`,\n    );\n  },\n};\n","// usefull for delay in thunk creators\nexport function waitForMe(milisec: number) {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve('');\n    }, milisec);\n  });\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { forecastAPI } from '../../@api/forecast-api';\nimport {\n  LocationType,\n  CurrentWeatherType,\n  ForecastType,\n  ForecastResponseType,\n} from '../../@types';\nimport { waitForMe } from '../../@utils/waitforme';\nimport { сoordinatesInitialStateType } from '../сoordinates/slice';\n\nconst forecastInitialState = {\n  location: {} as LocationType,\n  currentWeather: {} as CurrentWeatherType,\n  forecast: {\n    forecastday: [],\n  } as ForecastType,\n  // utils\n  isFetching: false,\n  isSuccess: false,\n  isError: false,\n  errorMessage: '',\n};\n\nexport type forecastInitialStateType = typeof forecastInitialState;\n\n// https://stackoverflow.com/questions/67279037/the-thunkapi-getstate-method-does-not-correctly-infer-the-state-type\nexport const getForecastTC = createAsyncThunk<\n  ForecastResponseType,\n  { days: number },\n  { state: { сoordinates: сoordinatesInitialStateType } }\n>('forecast/getForecast', async (param, thunkAPI) => {\n  const state = thunkAPI.getState();\n  try {\n    await waitForMe(300);\n    const res = await forecastAPI.dailyWeather(\n      param.days,\n      Number(state.сoordinates.lat || 0),\n      Number(state.сoordinates.lon || 0),\n    );\n    return res.data;\n  } catch (err: any) {\n    return thunkAPI.rejectWithValue(err.response.data);\n  }\n});\n\nexport const slice = createSlice({\n  name: 'forecast',\n  initialState: forecastInitialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getForecastTC.pending, (state) => {\n      state.isFetching = true;\n    });\n    builder.addCase(getForecastTC.fulfilled, (state, action) => {\n      if (action.payload) {\n        state.location = action.payload.location;\n        state.currentWeather = action.payload.current;\n        state.forecast = action.payload.forecast;\n      }\n      state.isFetching = false;\n      state.isSuccess = true;\n    });\n    builder.addCase(getForecastTC.rejected, (state, action) => {\n      state.isFetching = false;\n      state.isError = true;\n      if (action.payload instanceof Error) {\n        state.errorMessage = action.payload.message;\n      }\n    });\n  },\n});\n\nexport const forecastReducer = slice.reducer;\n","import { RootState } from '..';\n\nexport const сoordinatesSelector = (state: RootState) => {\n  return state.сoordinates;\n};\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nconst сoordinatesInitialState = {\n  lat: null as number | null, // lat: 51.5341714,\n  lon: null as number | null, // lon: 33.3767724,\n};\n\nexport type сoordinatesInitialStateType = typeof сoordinatesInitialState;\n\nexport const setUserCoordinatesTC = createAsyncThunk(\n  'сoordinates/setUserCoordinatesTC',\n  (_, thunkAPI) => {\n    navigator.geolocation.getCurrentPosition((position) => {\n      thunkAPI.dispatch(\n        setCoordinatesAC({\n          lat: position.coords.latitude,\n          lon: position.coords.longitude,\n        }),\n      );\n    });\n  },\n);\n\nexport const slice = createSlice({\n  name: 'сoordinates',\n  initialState: сoordinatesInitialState,\n  reducers: {\n    setCoordinatesAC(\n      state,\n      action: PayloadAction<{ lat: number; lon: number }>,\n    ) {\n      state.lat = action.payload.lat;\n      state.lon = action.payload.lon;\n    },\n  },\n});\n\nexport const сoordinatesReducer = slice.reducer;\nexport const { setCoordinatesAC } = slice.actions;\n","import React from 'react';\nimport { makeStyles, Theme, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  title: {\n    fontSize: '2rem',\n  },\n  point: {\n    fontSize: '3rem',\n    color: theme.palette.primary.main,\n  },\n}));\n\nexport const SectionTitle: React.FC = ({ children }) => {\n  const classes = useStyles();\n  return (\n    <Typography\n      className={classes.title}\n      gutterBottom\n      variant=\"body1\"\n      component=\"h2\"\n    >\n      {children}\n      <span className={classes.point}>.</span>\n    </Typography>\n  );\n};\nexport default SectionTitle;\n","import {\n  alpha,\n  Box,\n  Container,\n  Grid,\n  makeStyles,\n  Theme,\n  Typography,\n} from '@material-ui/core';\nimport React from 'react';\nimport SectionTitle from '../../../@components/UI/SectionTitle';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  avatarBox: {\n    display: 'flex',\n    justifyContent: 'center',\n    [theme.breakpoints.up('md')]: {\n      justifyContent: 'right',\n    },\n  },\n  avatar: {\n    width: '100%',\n    maxWidth: 300,\n    height: 'auto',\n  },\n  description: {\n    color: alpha(theme.palette.text.primary, 0.8),\n  },\n}));\n\nconst AboutSection: React.FC = () => {\n  const classes = useStyles();\n  return (\n    <Container maxWidth=\"lg\">\n      <Box py={3}>\n        <Grid container spacing={4}>\n          <Grid item xs={12} sm={8} md={8}>\n            <SectionTitle>About me</SectionTitle>\n            <Typography\n              className={classes.description}\n              variant=\"h6\"\n              color=\"inherit\"\n              paragraph\n            >\n              I would like to occupy JavaScript React developer position in a\n              team of highly qualified specialists. Last years I was engaged in\n              self-education of learning web technologies. I chose front-end\n              development and focused on my skills improvement. Also I improved\n              my English so I am strong enough in reading, writing and\n              understanding technical resources.\n            </Typography>\n          </Grid>\n          <Grid item xs={12} sm={4} md={4}>\n            <Box className={classes.avatarBox}>\n              <img\n                className={classes.avatar}\n                src=\"https://avatars.githubusercontent.com/u/4540573?v=4\"\n                alt=\"avatar\"\n              />\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Container>\n  );\n};\n\nexport default AboutSection;\n","import {\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Container,\n  Grid,\n  makeStyles,\n  Paper,\n  Typography,\n} from '@material-ui/core';\nimport { Search } from '@material-ui/icons';\nimport React from 'react';\nimport CurrentWeather from '../../../@components/CurrentWeather';\nimport Forecast from '../../../@components/Forecast';\nimport SectionTitle from '../../../@components/UI/SectionTitle';\n\nconst useStyles = makeStyles({\n  root: {\n    // maxWidth: 345,\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  media: {\n    maxHeight: 270,\n  },\n  content: {\n    flexGrow: 1,\n  },\n});\n\nconst ProjectsSection: React.FC = () => {\n  const classes = useStyles();\n  const cards = [{}, {}, {}] as any;\n  return (\n    <Container maxWidth=\"lg\">\n      {/* <Grid container spacing={3} style={{ padding: 3 }}>\n        <Grid item xs={12}>\n          <Box mb={1}>\n            <Paper elevation={3}>\n              fdfdfdf\n              <Search />\n            </Paper>\n          </Box>\n        </Grid>\n        <Grid item xs={12}>\n          <Box mb={1}>\n            <Paper elevation={3}>\n              <CurrentWeather />\n            </Paper>\n          </Box>\n        </Grid>\n        <Grid item xs={12}>\n          <Box mb={1}>\n            <Paper elevation={3}>\n              <Forecast />\n            </Paper>\n          </Box>\n        </Grid>\n      </Grid> */}\n      <SectionTitle>SectionTitle</SectionTitle>\n      <Grid container spacing={4}>\n        {cards.map((card: any) => (\n          <Grid item key={card} xs={12} sm={12} md={4}>\n            <Card className={classes.root}>\n              <CardMedia\n                className={classes.media}\n                component=\"img\"\n                image=\"https://source.unsplash.com/random\"\n                alt=\"random\"\n              />\n              <CardContent className={classes.content}>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  Heading\n                </Typography>\n                <Typography>\n                  This is a media card. You can use this section to describe the\n                  content.\n                </Typography>\n              </CardContent>\n              <CardActions>\n                <Button size=\"small\">View</Button>\n                <Button size=\"small\">Edit</Button>\n              </CardActions>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n    </Container>\n  );\n};\n\nexport default ProjectsSection;\n","import { Box, Container, Grid, Paper } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport CurrentWeather from '../../@components/CurrentWeather';\nimport Forecast from '../../@components/Forecast';\nimport Search from '../../@components/Search';\nimport { getForecastTC } from '../../@store/forecast/slice';\nimport { сoordinatesSelector } from '../../@store/сoordinates/selectors';\nimport { setUserCoordinatesTC } from '../../@store/сoordinates/slice';\nimport AboutSection from './AboutSection';\nimport ProjectsSection from './ProjectsSection';\n\nconst MainView: React.FC = () => {\n  const dispatch = useDispatch();\n  const { lon, lat } = useSelector(сoordinatesSelector);\n\n  useEffect(() => {\n    if (lat === null && lon === null) {\n      dispatch(setUserCoordinatesTC());\n    }\n  }, [lat, lon, dispatch]);\n\n  useEffect(() => {\n    const days = 3; // Limited for free plan\n    if (lat !== null && lon !== null) {\n      dispatch(getForecastTC({ days }));\n    }\n  }, [lat, lon, dispatch]);\n\n  return (\n    <>\n      <AboutSection />\n      <ProjectsSection />\n    </>\n    // <Container maxWidth=\"lg\">\n    //   <Grid container spacing={3} style={{ padding: 3 }}>\n    //     <Grid item xs={12}>\n    //       <Box mb={1}>\n    //         <Paper elevation={3}>\n    //           <Search />\n    //         </Paper>\n    //       </Box>\n    //     </Grid>\n    //     <Grid item xs={12}>\n    //       <Box mb={1}>\n    //         <Paper elevation={3}>\n    //           <CurrentWeather />\n    //         </Paper>\n    //       </Box>\n    //     </Grid>\n    //     <Grid item xs={12}>\n    //       <Box mb={1}>\n    //         <Paper elevation={3}>\n    //           <Forecast />\n    //         </Paper>\n    //       </Box>\n    //     </Grid>\n    //   </Grid>\n    // </Container>\n  );\n};\n\nexport default MainView;\n","import { makeStyles, Theme, createStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles((theme: Theme) => {\n  return {\n    ...createStyles({\n      grow: {\n        flexGrow: 1,\n      },\n      title: {\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n          display: 'block',\n        },\n      },\n    }),\n  };\n});\n","import { RootState } from '../index';\n\nexport const themeSelector = (state: RootState) => {\n  return state.ui.theme;\n};\n","import { createSlice } from '@reduxjs/toolkit';\nimport { ThemeColorsType } from '../../@types';\n\nconst uiInitialState = {\n  theme: 'light' as ThemeColorsType,\n};\n\nexport type UIInitialStateType = typeof uiInitialState;\n\nexport const slice = createSlice({\n  name: 'ui',\n  initialState: uiInitialState,\n  reducers: {\n    setThemeAC(state, action) {\n      state.theme = action.payload;\n    },\n  },\n});\n\nexport const uiReducer = slice.reducer;\nexport const { setThemeAC } = slice.actions;\n","import React from 'react';\nimport { withStyles, MenuProps, Menu, MenuItem } from '@material-ui/core';\n\nexport const StyledMenu = withStyles({\n  paper: {\n    border: '1px solid #d3d4d5',\n  },\n})((props: MenuProps) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'center',\n    }}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'center',\n    }}\n    PaperProps={{\n      style: {\n        width: 240,\n      },\n    }}\n    {...props}\n  />\n));\n\nexport const StyledMenuItem = withStyles((theme) => ({\n  root: {\n    '&:focus': {\n      backgroundColor: theme.palette.primary.main,\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n        color: theme.palette.common.white,\n      },\n    },\n  },\n}))(MenuItem);\n","// https://stackoverflow.com/a/55533600/3988363\nimport { IconButton } from '@material-ui/core';\nimport FormatColorFillIcon from '@material-ui/icons/FormatColorFill';\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport { useSnackbar } from 'notistack';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNonInitialEffect } from '../../../@hooks/useNonInitialEffect';\nimport { themeSelector } from '../../../@store/ui/selectors';\nimport { setThemeAC } from '../../../@store/ui/slice';\nimport { ThemeColorsType } from '../../../@types';\nimport { StyledMenu, StyledMenuItem } from './ThemeMenu.styles';\n\nconst options = [\n  'light',\n  'dark',\n  'deepPurpleAmber',\n  'pinkBlueGrey',\n] as ThemeColorsType[];\n\nexport default function ThemeMenu() {\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const currentTheme = useSelector(themeSelector);\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const [selectedIndex, setSelectedIndex] = useState(\n    options.indexOf(currentTheme),\n  );\n\n  const handleClickListItem = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = (\n    event: React.MouseEvent<HTMLElement>,\n    index: number,\n  ) => {\n    setSelectedIndex(index);\n    dispatch(setThemeAC(options[index]));\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  useNonInitialEffect(() => {\n    enqueueSnackbar(`Theme changed to ${currentTheme}`, {\n      variant: 'warning',\n    });\n  }, [enqueueSnackbar, currentTheme]);\n\n  return (\n    <div>\n      <IconButton\n        aria-label=\"more\"\n        aria-controls=\"long-menu\"\n        aria-haspopup=\"true\"\n        onClick={(e) => handleClickListItem(e)}\n      >\n        <FormatColorFillIcon />\n      </IconButton>\n      <StyledMenu\n        id=\"lock-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {options.map((option, index) => (\n          <StyledMenuItem\n            key={option}\n            // disabled={index === 0}\n            selected={index === selectedIndex}\n            onClick={(event) => handleMenuItemClick(event, index)}\n          >\n            {index === selectedIndex ? (\n              <RadioButtonCheckedIcon\n                fontSize=\"small\"\n                style={{ marginRight: '8px' }}\n              />\n            ) : (\n              <RadioButtonUncheckedIcon\n                fontSize=\"small\"\n                style={{ marginRight: '8px' }}\n              />\n            )}\n            {option}\n          </StyledMenuItem>\n        ))}\n      </StyledMenu>\n    </div>\n  );\n}\n","// https://github.com/thivi/use-non-initial-effect-hook\nimport { useEffect, EffectCallback, DependencyList, useRef } from 'react';\n\n/**\n * This hook gets called only when the dependencies change but not during initial render.\n *\n * @param {EffectCallback} effect The `useEffect` callback function.\n * @param {DependencyList} deps An array of dependencies.\n *\n * @example\n * ```\n *  useNonInitialEffect(()=>{\n *      alert(\"Dependency changed!\");\n * },[dependency]);\n * ```\n */\nexport const useNonInitialEffect = (\n  effect: EffectCallback,\n  deps?: DependencyList,\n) => {\n  const initialRender = useRef(true);\n\n  useEffect(() => {\n    let effectReturns: any = () => {\n      // do nothing.\n    };\n\n    if (initialRender.current) {\n      initialRender.current = false;\n    } else {\n      effectReturns = effect();\n    }\n\n    if (effectReturns && typeof effectReturns === 'function') {\n      return effectReturns;\n    }\n    return undefined;\n  }, deps);\n};\n","import { Container } from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport { useStyles } from './AppBar.styles';\nimport ThemeMenu from './ThemeMenu/ThemeMenu';\n\nexport const SimpleAppBar: React.FC = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Container maxWidth=\"lg\">\n          <Toolbar style={{ padding: 0 }}>\n            <Typography className={classes.title} variant=\"h6\" noWrap>\n              Weather App\n            </Typography>\n            <div className={classes.grow} />\n            <ThemeMenu />\n          </Toolbar>\n        </Container>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default SimpleAppBar;\n","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  AppBar,\n  Container,\n  Toolbar,\n  Typography,\n  IconButton,\n  Box,\n} from '@material-ui/core';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nconst useStyles = makeStyles(() => {\n  return {\n    ...createStyles({\n      grow: {\n        flexGrow: 1,\n      },\n      copyright: {\n        textAlign: 'center',\n        marginBottom: 0,\n        fontSize: 16,\n      },\n    }),\n  };\n});\n\nconst Footer: React.FC = () => {\n  const classes = useStyles();\n  return (\n    <AppBar position=\"static\">\n      <Container maxWidth=\"lg\">\n        <Toolbar\n          style={{\n            padding: 0,\n            display: 'flex',\n            justifyContent: 'space-between',\n          }}\n        >\n          <Box>\n            <Typography className={classes.copyright} variant=\"h6\" noWrap>\n              © created by Aleksandr Siryi\n            </Typography>\n          </Box>\n          <Box>\n            <IconButton\n              color=\"inherit\"\n              href=\"https://github.com/theobroma/intelli-start-cv\"\n              data-testid=\"github-link\"\n              aria-label=\"Github Link\"\n            >\n              <GitHubIcon />\n            </IconButton>\n          </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\n\nexport default Footer;\n","import { Box } from '@material-ui/core';\nimport React from 'react';\nimport SimpleAppBar from '../@components/AppBar';\nimport Footer from '../@components/Footer';\n\ninterface ILayout {\n  // All other props\n  [x: string]: any;\n}\n\nexport const GuestLayout: React.FC<ILayout> = ({ children }) => {\n  return (\n    <div className=\"HolyGrail\">\n      <SimpleAppBar />\n      <main className=\"HolyGrail-content\">\n        <Box mt={2} mb={2}>\n          {children}\n        </Box>\n      </main>\n      <Footer />\n    </div>\n  );\n};\n","// usually many routes here\nimport React from 'react';\nimport MainView from '../@views/MainView';\nimport { GuestLayout } from './Layouts';\n\nexport const AppContainer: React.FC = () => {\n  return (\n    <GuestLayout>\n      <MainView />\n    </GuestLayout>\n  );\n};\n","import { createSlice } from '@reduxjs/toolkit';\nimport { ThemeColorsType } from '../../@types';\n\nconst projectsInitialState = {\n  //   theme: 'light' as ThemeColorsType,\n  data: [] as any,\n};\n\nexport type ProjectsInitialStateType = typeof projectsInitialState;\n\nexport const slice = createSlice({\n  name: 'projects',\n  initialState: projectsInitialState,\n  reducers: {\n    // setThemeAC(state, action) {\n    //   state.theme = action.payload;\n    // },\n  },\n});\n\nexport const projectsReducer = slice.reducer;\n// export const { setThemeAC } = slice.actions;\n","import { SearchPlaceResponseType } from '../@types';\nimport { instance } from './api';\n\nexport const searchAPI = {\n  place(place: string) {\n    return instance.get<SearchPlaceResponseType[]>(`/search.json?q=${place}`);\n  },\n};\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { searchAPI } from '../../@api/search-api';\nimport { SearchPlaceResponseType } from '../../@types';\n\nconst searchInitialState = {\n  data: [] as SearchPlaceResponseType[],\n};\n\nexport const searchTC = createAsyncThunk<\n  SearchPlaceResponseType[],\n  string,\n  any\n>('search/searchTC', async (place, thunkAPI) => {\n  try {\n    const res = await searchAPI.place(place);\n    return res.data;\n  } catch (err: any) {\n    return thunkAPI.rejectWithValue(err.response.data);\n  }\n});\n\nexport const slice = createSlice({\n  name: 'search',\n  initialState: searchInitialState,\n  reducers: {\n    clearData(state) {\n      state.data = [];\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(searchTC.fulfilled, (state, action) => {\n      if (action.payload) {\n        state.data = action.payload;\n      }\n    });\n  },\n});\n\nexport const searchReducer = slice.reducer;\nexport const { clearData: clearDataAC } = slice.actions;\n","import { combineReducers } from 'redux';\nimport { сoordinatesReducer } from './сoordinates/slice';\nimport { forecastReducer } from './forecast/slice';\nimport { projectsReducer } from './projects/slice';\nimport { searchReducer } from './search/slice';\nimport { uiReducer } from './ui/slice';\n\nexport const rootReducer = combineReducers({\n  сoordinates: сoordinatesReducer,\n  forecast: forecastReducer,\n  projects: projectsReducer,\n  search: searchReducer,\n  ui: uiReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { createLogger } from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { rootReducer } from './@store/index';\n\nconst logger = createLogger({\n  collapsed: true,\n});\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  // blacklist: ['filter'], // will not be persisted\n  whitelist: ['ui'], // will be persisted\n};\n\n// Middleware: Redux Persist Persisted Reducer\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(logger),\n  // devTools: process.env.NODE_ENV === 'development',\n  devTools: true,\n});\n\nexport const persistor = persistStore(store);\nexport default { store, persistor };\n","import React from 'react';\nimport { CircularProgress, Backdrop, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\nexport const LoadingPage: React.FC = () => {\n  const classes = useStyles();\n  return (\n    <Backdrop className={classes.backdrop} open>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  );\n};\nexport default LoadingPage;\n","import React from 'react';\nimport { SnackbarProvider as NotiStackSnackbarProvider } from 'notistack';\n\nexport const SNACKBAR_MAX_COUNT = 5;\n\nconst SnackBarProvider: React.FC = ({ children }) => {\n  return (\n    <NotiStackSnackbarProvider\n      maxSnack={SNACKBAR_MAX_COUNT}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'right',\n      }}\n    >\n      {children}\n    </NotiStackSnackbarProvider>\n  );\n};\n\nexport default SnackBarProvider;\n","import React from 'react';\nimport { CssBaseline, PaletteType } from '@material-ui/core';\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { useSelector } from 'react-redux';\nimport { themeSelector } from '../@store/ui/selectors';\n\n/**\n * Material UI theme \"front\" colors, \"back\" colors are different for Light and Dark modes\n */\nconst FRONT_COLORS = {\n  info: {\n    main: '#0277bd', // Light Blue 800\n    contrastText: '#FFFFFF',\n  },\n  success: {\n    main: '#2e7d32', // Green 800\n    contrastText: '#FFFFFF',\n  },\n  warning: {\n    main: '#f9a825', // Yellow 800\n    contrastText: '#FFFFFF',\n  },\n  error: {\n    main: '#c62828', // Red 800\n    contrastText: '#FFFFFF',\n  },\n};\n\n/**\n * Material UI theme config for \"Light Mode\"\n */\nconst LIGHT_THEME = {\n  palette: {\n    type: 'light' as PaletteType,\n    background: {\n      paper: '#f5f5f5', // Gray 100 - Background of \"Paper\" based component\n      default: '#FFFFFF',\n    },\n    primary: {\n      light: '#757ce8',\n      main: '#3f50b5',\n      dark: '#002884',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#ff7961',\n      main: '#f44336',\n      dark: '#ba000d',\n      contrastText: '#000',\n    },\n    ...FRONT_COLORS,\n  },\n};\n\n/**\n * Material UI theme config for \"Dark Mode\"\n */\nconst DARK_THEME = {\n  palette: {\n    type: 'dark' as PaletteType,\n    background: {\n      paper: '#424242', // Gray 800 - Background of \"Paper\" based component\n      default: '#303030',\n    },\n    primary: {\n      main: '#81c784', // Green 300\n      contrastText: '#000000',\n    },\n    secondary: {\n      main: '#ffb74d', // Orange 300\n      contrastText: '#000',\n    },\n    ...FRONT_COLORS,\n  },\n};\n\nconst DEEP_PURPLE_AMBER_THEME = {\n  palette: {\n    type: 'light' as PaletteType,\n    background: {\n      paper: '#f5f5f5', // Gray 100 - Background of \"Paper\" based component\n      default: '#FFFFFF',\n    },\n    primary: {\n      main: '#673ab7',\n      contrastText: '#fff',\n    },\n    secondary: {\n      main: '#ffd740',\n      contrastText: '#000',\n    },\n    ...FRONT_COLORS,\n  },\n};\n\nconst PINK_BLUE_GREY_THEME = {\n  palette: {\n    type: 'dark' as PaletteType,\n    background: {\n      paper: '#424242', // Gray 800 - Background of \"Paper\" based component\n      default: '#303030',\n    },\n    primary: {\n      main: '#e91e63;', // Green 300\n      contrastText: '#000000',\n    },\n    secondary: {\n      main: '#607d8b;', // Orange 300\n      contrastText: '#000',\n    },\n    ...FRONT_COLORS,\n  },\n};\n\nconst themeMap = {\n  light: LIGHT_THEME,\n  dark: DARK_THEME,\n  deepPurpleAmber: DEEP_PURPLE_AMBER_THEME,\n  pinkBlueGrey: PINK_BLUE_GREY_THEME,\n};\n\nconst AppThemeProvider: React.FC = ({ children }) => {\n  const currentTheme = useSelector(themeSelector);\n  const theme = createTheme(themeMap[currentTheme]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      {children}\n    </ThemeProvider>\n  );\n};\n\nexport default AppThemeProvider;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { AppContainer } from './#/App';\nimport { store, persistor } from './configureStore';\nimport LoadingPage from './@components/UI/LoadingPage';\nimport { SnackBarProvider } from './@components/UI/SnackBar';\nimport AppThemeProvider from './@themes/theme';\nimport reportWebVitals from './reportWebVitals';\n\n// All styles\nimport './@assets/styles/index.scss';\n\n// Open Source fonts\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\n\nconst rootEl = document.getElementById('root');\n\nrender(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate\n        loading={<LoadingPage />}\n        persistor={persistor}\n        onBeforeLift={() => new Promise((resolve) => setTimeout(resolve, 10))} // delay\n      >\n        <AppThemeProvider>\n          <SnackBarProvider>\n            <AppContainer />\n          </SnackBarProvider>\n        </AppThemeProvider>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  rootEl,\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}